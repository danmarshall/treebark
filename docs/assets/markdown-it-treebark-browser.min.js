(function(y,b){typeof exports=="object"&&typeof module<"u"?module.exports=b():typeof define=="function"&&define.amd?define(b):(y=typeof globalThis<"u"?globalThis:y||self,y.MarkdownItTreebark=b())})(this,(function(){"use strict";const y=new Set(["div","span","p","header","footer","main","section","article","h1","h2","h3","h4","h5","h6","strong","em","blockquote","code","pre","ul","ol","li","table","thead","tbody","tr","th","td","a"]),b=new Set(["$comment","$if"]),v=new Set(["img"]),W=new Set([...y,...b,...v]),k=new Set(["id","class","style","title","role","data-","aria-"]),P={a:new Set(["href","target","rel"]),img:new Set(["src","alt","width","height"]),table:new Set(["summary"]),th:new Set(["scope","colspan","rowspan"]),td:new Set(["scope","colspan","rowspan"]),blockquote:new Set(["cite"])};function g(e,r,t=[]){if(r===".")return e;let s=e,n=r;for(;n.startsWith("..");){let o=0,i=n;for(;i.startsWith("..");)o++,i=i.substring(2),i.startsWith("/")&&(i=i.substring(1));if(o<=t.length)s=t[t.length-o],n=i.startsWith(".")?i.substring(1):i;else return}return n?n.split(".").reduce((o,i)=>o&&typeof o=="object"&&o!==null?o[i]:void 0,s):s}function E(e){return e.replace(/[&<>"']/g,r=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})[r]||r)}function S(e,r,t=!0,s=[]){return e.replace(/\{\{\{([^{]*?)\}\}\}|\{\{([^{]*?)\}\}/g,(n,o,i)=>{if(o!==void 0)return`{{${o.trim()}}}`;const c=i.trim(),l=g(r,c,s);return l==null?"":t?E(String(l)):String(l)})}function R(e,r){const t=k.has(e)||[...k].some(o=>o.endsWith("-")&&e.startsWith(o)),s=P[r],n=s&&s.has(e);if(!t&&!n)throw new Error(`Attribute "${e}" is not allowed on tag "${r}"`)}function G(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)&&"$bind"in e}function _(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)&&"$check"in e}function B(e){if(e!=="."){if(e.includes(".."))throw new Error(`$bind does not support parent context access (..) - use interpolation {{..prop}} in content/attributes instead. Invalid: $bind: "${e}"`);if(e.includes("{{"))throw new Error(`$bind does not support interpolation {{...}} - use literal property paths only. Invalid: $bind: "${e}"`)}}function O(e){if(e!=="."){if(e.includes(".."))throw new Error(`$check does not support parent context access (..) - use interpolation {{..prop}} in content/attributes instead. Invalid: $check: "${e}"`);if(e.includes("{{"))throw new Error(`$check does not support interpolation {{...}} - use literal property paths only. Invalid: $check: "${e}"`)}}function C(e,r){const t=[];if("$<"in r&&t.push({key:"$<",value:r["$<"]}),"$>"in r&&t.push({key:"$>",value:r["$>"]}),"$<="in r&&t.push({key:"$<=",value:r["$<="]}),"$>="in r&&t.push({key:"$>=",value:r["$>="]}),"$="in r&&t.push({key:"$=",value:r["$="]}),"$in"in r&&t.push({key:"$in",value:r.$in}),t.length===0){const i=!!e;return r.$not?!i:i}const s=t.map(i=>{switch(i.key){case"$<":return typeof e=="number"&&typeof i.value=="number"&&e<i.value;case"$>":return typeof e=="number"&&typeof i.value=="number"&&e>i.value;case"$<=":return typeof e=="number"&&typeof i.value=="number"&&e<=i.value;case"$>=":return typeof e=="number"&&typeof i.value=="number"&&e>=i.value;case"$=":return e===i.value;case"$in":return Array.isArray(i.value)&&i.value.includes(e);default:return!1}}),n=r.$stack==="OR";let o;return n?o=s.some(i=>i):o=s.every(i=>i),r.$not?!o:o}function N(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)&&"$check"in e&&typeof e.$check=="string"}function q(e,r,t=[]){O(e.$check);const s=g(r,e.$check,t);return C(s,e)?e.$then!==void 0?e.$then:"":e.$else!==void 0?e.$else:""}function M(e){if(Array.isArray(e)||typeof e!="object"||e===null)return!1;const r=Object.entries(e);if(r.length===0)return!1;const[,t]=r[0];return!t||typeof t!="object"||Array.isArray(t)?!1:"$bind"in t&&t.$bind==="."}function F(e){if(!e||typeof e!="object")throw new Error("Template object cannot be null, undefined, or non-object");const r=Object.entries(e);if(r.length===0)throw new Error("Template object must have at least one tag");const t=r[0];if(!t)throw new Error("Template object must have at least one tag");const[s,n]=t,o=typeof n=="string"?[n]:Array.isArray(n)?n:n?.$children||[],i=n&&typeof n=="object"&&!Array.isArray(n)?Object.fromEntries(Object.entries(n).filter(([c])=>c!=="$children")):{};return{tag:s,rest:n,children:o,attrs:i}}const D=(e,r)=>{if(!r)return e.length<=1?e[0]?.[1]??"":e.reduce((s,[,n])=>s+n,"");if(e.length===0)return"";if(e.length===1&&!e[0][1].includes("<"))return e[0][1];let t=`
`;for(let s=0;s<e.length;s++)t+=r.repeat(e[s][0])+e[s][1],s<e.length-1&&(t+=`
`);return t+=`
`,t};function I(e,r={}){const t=Array.isArray(e.data)?e.data:{...e.data,...r.data},s=r.indent?{indentStr:typeof r.indent=="number"?" ".repeat(r.indent):typeof r.indent=="string"?r.indent:"  ",level:0}:{};if(!Array.isArray(e.template)&&Array.isArray(e.data)&&!M(e.template)){const n=s.indentStr?`
`:"";return e.data.map(o=>d(e.template,{...o,...r.data},s)).join(n)}return d(e.template,t,s)}function J(e,r,t,s,n,o,i=[]){const c=D(s,n),l=c.startsWith(`
`)&&n?n.repeat(o||0):"";if(e==="$comment")return`<!--${c}${l}-->`;const f=`<${e}${Y(r,t,e,i)}>`;return v.has(e)?f:`${f}${c}${l}</${e}>`}function d(e,r,t={}){const s=t.parents||[];if(typeof e=="string")return S(e,r,!0,s);if(Array.isArray(e))return e.map(a=>d(a,r,t)).join(t.indentStr?`
`:"");const{tag:n,rest:o,children:i,attrs:c}=F(e);if(!W.has(n))throw new Error(`Tag "${n}" is not allowed`);if(n==="$comment"&&t.insideComment)throw new Error("Nested comments are not allowed");if(n==="$if"){if(!_(o))throw new Error('"$if" tag requires $check attribute to specify the condition');O(o.$check);const a=g(r,o.$check,s),{$check:u,$then:p,$else:A,$children:m,...w}=o,T=p!==void 0?p:m&&m.length>0?m[0]:void 0,j=A,z=new Set(["$not","$<","$>","$<=","$>=","$=","$in","$stack","$then","$else"]);if(Object.keys(w).filter(Q=>!z.has(Q)).length>0)throw new Error('"$if" tag does not support attributes, only $check, operators ($<, $>, $<=, $>=, $=, $in), modifiers ($not, $stack), and $then/$else');const L=C(a,o)?T:j;return L===void 0?"":d(L,r,t)}if(v.has(n)&&i.length>0)throw new Error(`Tag "${n}" is a void element and cannot have children`);const l={...t,insideComment:n==="$comment"||t.insideComment,level:(t.level||0)+1},f=a=>a===""?[]:t.indentStr&&a.includes(`
`)&&!a.includes("<")?a.split(`
`).map(u=>[l.level,u]):[[l.level,a]];let $,h;if(G(o)){B(o.$bind);const a=g(r,o.$bind,[]),{$bind:u,$children:p=[],...A}=o;if(!Array.isArray(a)){const m=a&&typeof a=="object"&&a!==null?a:{},w=[...s,r];return d({[n]:{...A,$children:p}},m,{...t,parents:w})}$=[];for(const m of a){const w=[...s,r];for(const T of p){const j=d(T,m,{...l,parents:w});$.push(...f(j))}}h=A}else{$=[];for(const a of i){const u=d(a,r,{...l,parents:s});$.push(...f(u))}h=c}return J(n,h,r,$,t.indentStr,t.level,s)}function Y(e,r,t,s=[]){const n=Object.entries(e).filter(([o])=>(R(o,t),!0)).map(([o,i])=>{if(N(i)){const c=q(i,r,s);return`${o}="${E(S(String(c),r,!1,s))}"`}else return`${o}="${E(S(String(i),r,!1,s))}"`}).join(" ");return n?" "+n:""}function H(e,r={}){const{data:t={},yaml:s,indent:n}=r,o=e.renderer.rules.fence;e.renderer.rules.fence=function(i,c,l,f,$){const h=i[c],a=h.info?h.info.trim():"";if(a==="treebark"||a.startsWith("treebark "))try{return K(h.content,t,s,n)+`
`}catch(u){const p=u instanceof Error?u.message:"Unknown error";return`<div class="treebark-error"><strong>Treebark Error:</strong> ${U(p)}</div>
`}return o?o(i,c,l,f,$):""}}function K(e,r,t,s){let n,o=null;if(!e.trim())throw new Error("Empty or invalid template");if(t)try{n=t.load(e)}catch(i){o=i instanceof Error?i:new Error("YAML parsing failed")}if(!n)try{n=JSON.parse(e)}catch(i){throw t&&o?new Error(`Failed to parse as YAML or JSON. YAML error: ${o.message}`):new Error(`Failed to parse as JSON: ${i instanceof Error?i.message:"Invalid format"}`)}if(!n)throw new Error("Empty or invalid template");if(n&&typeof n=="object"&&"template"in n){const i={...r,...n.data};return I({template:n.template,data:i},{indent:s})}return I({template:n,data:r},{indent:s})}function U(e){const r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,t=>r[t])}return H}));
//# sourceMappingURL=markdown-it-treebark-browser.min.js.map
