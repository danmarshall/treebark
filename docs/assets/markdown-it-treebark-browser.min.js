(function(p,y){typeof exports=="object"&&typeof module<"u"?module.exports=y():typeof define=="function"&&define.amd?define(y):(p=typeof globalThis<"u"?globalThis:p||self,p.MarkdownItTreebark=y())})(this,(function(){"use strict";const p=new Set(["div","span","p","header","footer","main","section","article","h1","h2","h3","h4","h5","h6","strong","em","blockquote","code","pre","ul","ol","li","table","thead","tbody","tr","th","td","a"]),y=new Set(["$comment","$if"]),w=new Set(["img","br","hr"]),O=new Set([...p,...y,...w]),j=new Set(["id","class","style","title","role","data-","aria-"]),I={a:new Set(["href","target","rel"]),img:new Set(["src","alt","width","height"]),table:new Set(["summary"]),th:new Set(["scope","colspan","rowspan"]),td:new Set(["scope","colspan","rowspan"]),blockquote:new Set(["cite"])};function m(e,r,n=[]){if(r===".")return e;let o=e,i=r;for(;i.startsWith("..");){let s=0,t=i;for(;t.startsWith("..");)s++,t=t.substring(2),t.startsWith("/")&&(t=t.substring(1));if(s<=n.length)o=n[n.length-s],i=t.startsWith(".")?t.substring(1):t;else return}return i?i.split(".").reduce((s,t)=>s&&typeof s=="object"&&s!==null?s[t]:void 0,o):o}function g(e){return e.replace(/[&<>"']/g,r=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})[r]||r)}function A(e,r,n=!0,o=[]){return e.replace(/\{\{\{([^{]*?)\}\}\}|\{\{([^{]*?)\}\}/g,(i,s,t)=>{if(s!==void 0)return`{{${s.trim()}}}`;const l=t.trim(),c=m(r,l,o);return c==null?"":n?g(String(c)):String(c)})}function L(e,r){const n=j.has(e)||[...j].some(s=>s.endsWith("-")&&e.startsWith(s)),o=I[r],i=o&&o.has(e);if(!n&&!i)throw new Error(`Attribute "${e}" is not allowed on tag "${r}"`)}function W(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)&&"$bind"in e}function P(e){if(e!=="."){if(e.includes(".."))throw new Error(`$bind does not support parent context access (..) - use interpolation {{..prop}} in content/attributes instead. Invalid: $bind: "${e}"`);if(e.includes("{{"))throw new Error(`$bind does not support interpolation {{...}} - use literal property paths only. Invalid: $bind: "${e}"`)}}function S(e){if(e!=="."){if(e.includes(".."))throw new Error(`$check does not support parent context access (..) - use interpolation {{..prop}} in content/attributes instead. Invalid: $check: "${e}"`);if(e.includes("{{"))throw new Error(`$check does not support interpolation {{...}} - use literal property paths only. Invalid: $check: "${e}"`)}}function T(e,r){const n=[];if("$<"in r&&n.push({key:"$<",value:r["$<"]}),"$>"in r&&n.push({key:"$>",value:r["$>"]}),"$<="in r&&n.push({key:"$<=",value:r["$<="]}),"$>="in r&&n.push({key:"$>=",value:r["$>="]}),"$="in r&&n.push({key:"$=",value:r["$="]}),"$in"in r&&n.push({key:"$in",value:r.$in}),n.length===0){const t=!!e;return r.$not?!t:t}const o=n.map(t=>{switch(t.key){case"$<":return typeof e=="number"&&typeof t.value=="number"&&e<t.value;case"$>":return typeof e=="number"&&typeof t.value=="number"&&e>t.value;case"$<=":return typeof e=="number"&&typeof t.value=="number"&&e<=t.value;case"$>=":return typeof e=="number"&&typeof t.value=="number"&&e>=t.value;case"$=":return e===t.value;case"$in":return Array.isArray(t.value)&&t.value.includes(e);default:return!1}}),i=r.$join==="OR";let s;return i?s=o.some(t=>t):s=o.every(t=>t),r.$not?!s:s}function R(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)&&"$check"in e&&typeof e.$check=="string"}function G(e,r,n=[]){S(e.$check);const o=m(r,e.$check,n);return T(o,e)?e.$then!==void 0?e.$then:"":e.$else!==void 0?e.$else:""}function _(e){if(Array.isArray(e)||typeof e!="object"||e===null)return!1;const r=Object.entries(e);if(r.length===0)return!1;const[,n]=r[0];return!n||typeof n!="object"||Array.isArray(n)?!1:"$bind"in n&&n.$bind==="."}function B(e){if(!e||typeof e!="object")throw new Error("Template object cannot be null, undefined, or non-object");const r=Object.entries(e);if(r.length===0)throw new Error("Template object must have at least one tag");const n=r[0];if(!n)throw new Error("Template object must have at least one tag");const[o,i]=n,s=typeof i=="string"?[i]:Array.isArray(i)?i:i?.$children||[],t=i&&typeof i=="object"&&!Array.isArray(i)?Object.fromEntries(Object.entries(i).filter(([l])=>l!=="$children")):{};return{tag:o,rest:i,children:s,attrs:t}}function N(e,r,n=[]){const o=e;if(!o.$check)throw new Error('"$if" tag requires $check attribute to specify the condition');S(o.$check);const i=m(r,o.$check,n);if(typeof e=="object"&&e!==null&&!Array.isArray(e)&&"$children"in e)throw new Error('"$if" tag does not support $children, use $then and $else instead');const{$check:s,$then:t,$else:l}=o;if(t!==void 0&&Array.isArray(t))throw new Error('"$if" tag $then must be a string or single element object, not an array');if(l!==void 0&&Array.isArray(l))throw new Error('"$if" tag $else must be a string or single element object, not an array');const c=typeof e=="object"&&e!==null&&!Array.isArray(e)?Object.keys(e):[],f=new Set(["$check","$then","$else","$not","$<","$>","$<=","$>=","$=","$in","$join"]);if(c.filter(u=>!f.has(u)).length>0)throw new Error('"$if" tag does not support attributes, only $check, operators ($<, $>, $<=, $>=, $=, $in), modifiers ($not, $join), and $then/$else');return{valueToRender:T(i,o)?t:l}}const q=(e,r)=>{if(!r)return e.length<=1?e[0]?.[1]??"":e.reduce((o,[,i])=>o+i,"");if(e.length===0)return"";if(e.length===1&&!e[0][1].includes("<"))return e[0][1];let n=`
`;for(let o=0;o<e.length;o++)n+=r.repeat(e[o][0])+e[o][1],o<e.length-1&&(n+=`
`);return n+=`
`,n};function k(e,r={}){const n=Array.isArray(e.data)?e.data:{...e.data,...r.data},o=r.indent?{indentStr:typeof r.indent=="number"?" ".repeat(r.indent):typeof r.indent=="string"?r.indent:"  ",level:0}:{};if(!Array.isArray(e.template)&&Array.isArray(e.data)&&!_(e.template)){const i=o.indentStr?`
`:"";return e.data.map(s=>h(e.template,{...s,...r.data},o)).join(i)}return h(e.template,n,o)}function M(e,r,n,o,i,s,t=[]){const l=q(o,i),c=l.startsWith(`
`)&&i?i.repeat(s||0):"";if(e==="$comment")return`<!--${l}${c}-->`;const f=`<${e}${F(r,n,e,t)}>`;return w.has(e)?f:`${f}${l}${c}</${e}>`}function h(e,r,n={}){const o=n.parents||[];if(typeof e=="string")return A(e,r,!0,o);if(Array.isArray(e))return e.map(a=>h(a,r,n)).join(n.indentStr?`
`:"");const{tag:i,rest:s,children:t,attrs:l}=B(e);if(!O.has(i))throw new Error(`Tag "${i}" is not allowed`);if(i==="$comment"&&n.insideComment)throw new Error("Nested comments are not allowed");if(i==="$if"){const{valueToRender:a}=N(s,r,o);return a===void 0?"":h(a,r,n)}if(w.has(i)&&t.length>0)throw new Error(`Tag "${i}" is a void element and cannot have children`);const c={...n,insideComment:i==="$comment"||n.insideComment,level:(n.level||0)+1},f=a=>a===""?[]:n.indentStr&&a.includes(`
`)&&!a.includes("<")?a.split(`
`).map(u=>[c.level,u]):[[c.level,a]];let d,$;if(W(s)){P(s.$bind);const a=m(r,s.$bind,[]),{$bind:u,$children:b=[],...C}=s;if(!Array.isArray(a)){const v=a&&typeof a=="object"&&a!==null?a:{},E=[...o,r];return h({[i]:{...C,$children:b}},v,{...n,parents:E})}d=[];for(const v of a){const E=[...o,r];for(const H of b){const K=h(H,v,{...c,parents:E});d.push(...f(K))}}$=C}else{d=[];for(const a of t){const u=h(a,r,{...c,parents:o});d.push(...f(u))}$=l}return M(i,$,r,d,n.indentStr,n.level,o)}function F(e,r,n,o=[]){const i=Object.entries(e).filter(([s])=>(L(s,n),!0)).map(([s,t])=>{if(R(t)){const l=G(t,r,o);return`${s}="${g(A(String(l),r,!1,o))}"`}else return`${s}="${g(A(String(t),r,!1,o))}"`}).join(" ");return i?" "+i:""}function D(e,r={}){const{data:n={},yaml:o,indent:i}=r,s=e.renderer.rules.fence;e.renderer.rules.fence=function(t,l,c,f,d){const $=t[l],a=$.info?$.info.trim():"";if(a==="treebark"||a.startsWith("treebark "))try{return J($.content,n,o,i)+`
`}catch(u){const b=u instanceof Error?u.message:"Unknown error";return`<div class="treebark-error"><strong>Treebark Error:</strong> ${Y(b)}</div>
`}return s?s(t,l,c,f,d):""}}function J(e,r,n,o){let i,s=null;if(!e.trim())throw new Error("Empty or invalid template");if(n)try{i=n.load(e)}catch(t){s=t instanceof Error?t:new Error("YAML parsing failed")}if(!i)try{i=JSON.parse(e)}catch(t){throw n&&s?new Error(`Failed to parse as YAML or JSON. YAML error: ${s.message}`):new Error(`Failed to parse as JSON: ${t instanceof Error?t.message:"Invalid format"}`)}if(!i)throw new Error("Empty or invalid template");if(i&&typeof i=="object"&&"template"in i){const t={...r,...i.data};return k({template:i.template,data:t},{indent:o})}return k({template:i,data:r},{indent:o})}function Y(e){const r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,n=>r[n])}return D}));
//# sourceMappingURL=markdown-it-treebark-browser.min.js.map
