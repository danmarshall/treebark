(function(g,h){typeof exports=="object"&&typeof module<"u"?module.exports=h():typeof define=="function"&&define.amd?define(h):(g=typeof globalThis<"u"?globalThis:g||self,g.MarkdownItTreebark=h())})(this,(function(){"use strict";const g=new Set(["div","span","p","header","footer","main","section","article","h1","h2","h3","h4","h5","h6","strong","em","blockquote","code","pre","ul","ol","li","table","thead","tbody","tr","th","td","a","comment"]),h=new Set(["img"]),O=new Set([...g,...h]),$=new Set(["id","class","style","title","role","data-","aria-"]),C={a:new Set(["href","target","rel"]),img:new Set(["src","alt","width","height"]),table:new Set(["summary"]),th:new Set(["scope","colspan","rowspan"]),td:new Set(["scope","colspan","rowspan"]),blockquote:new Set(["cite"])};function E(e,n,r=[]){if(n===".")return e;let i=e,t=n;for(;t.startsWith("..");){let o=0,s=t;for(;s.startsWith("..");)o++,s=s.substring(2),s.startsWith("/")&&(s=s.substring(1));if(o<=r.length)i=r[r.length-o],t=s.startsWith(".")?s.substring(1):s;else return}return t?t.split(".").reduce((o,s)=>o&&typeof o=="object"&&o!==null?o[s]:void 0,i):i}function j(e){return e.replace(/[&<>"']/g,n=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})[n]||n)}function S(e,n,r=!0,i=[]){return e.replace(/\{\{\{([^{]*?)\}\}\}|\{\{([^{]*?)\}\}/g,(t,o,s)=>{if(o!==void 0)return`{{${o.trim()}}}`;const l=s.trim(),c=E(n,l,i);return c==null?"":r?j(String(c)):String(c)})}function k(e,n){const r=$.has(e)||[...$].some(o=>o.endsWith("-")&&e.startsWith(o)),i=C[n],t=i&&i.has(e);if(!r&&!t)throw new Error(`Attribute "${e}" is not allowed on tag "${n}"`)}function I(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)&&"$bind"in e}function W(e){if(e!=="."){if(e.includes(".."))throw new Error(`$bind does not support parent context access (..) - use interpolation {{..prop}} in content/attributes instead. Invalid: $bind: "${e}"`);if(e.includes("{{"))throw new Error(`$bind does not support interpolation {{...}} - use literal property paths only. Invalid: $bind: "${e}"`)}}function v(e){if(Array.isArray(e)||typeof e!="object"||e===null)return!1;const n=Object.entries(e);if(n.length===0)return!1;const[,r]=n[0];if(!r||typeof r!="object"||Array.isArray(r))return!1;if("$bind"in r&&r.$bind===".")return!0;const i=r?.$children||[];for(const t of i)if(v(t))return!0;return!1}function L(e){if(typeof e!="object"||Array.isArray(e)||e===null)return!1;const n=Object.entries(e);if(n.length===0)return!1;const[,r]=n[0];return!r||typeof r!="object"||Array.isArray(r)?!1:"$bind"in r&&r.$bind==="."}function B(e){if(!e||typeof e!="object")throw new Error("Template object cannot be null, undefined, or non-object");const n=Object.entries(e);if(n.length===0)throw new Error("Template object must have at least one tag");const r=n[0];if(!r)throw new Error("Template object must have at least one tag");const[i,t]=r,o=typeof t=="string"?[t]:Array.isArray(t)?t:t?.$children||[],s=t&&typeof t=="object"&&!Array.isArray(t)?Object.fromEntries(Object.entries(t).filter(([l])=>l!=="$children")):{};return{tag:i,rest:t,children:o,attrs:s}}const P=(e,n)=>{if(!n)return e.length<=1?e[0]?.[1]??"":e.reduce((i,[,t])=>i+t,"");if(e.length===0)return"";if(e.length===1&&!e[0][1].includes("<"))return e[0][1];let r=`
`;for(let i=0;i<e.length;i++)r+=n.repeat(e[i][0])+e[i][1],i<e.length-1&&(r+=`
`);return r+=`
`,r};function T(e,n={}){const r=Array.isArray(e.data)?e.data:{...e.data,...n.data},i=n.indent?{indentStr:typeof n.indent=="number"?" ".repeat(n.indent):typeof n.indent=="string"?n.indent:"  ",level:0}:{};if(!Array.isArray(e.template)&&Array.isArray(e.data)&&!v(e.template)){const t=i.indentStr?`
`:"";return e.data.map(o=>m(e.template,{...o,...n.data},i)).join(t)}return m(e.template,r,i)}function G(e,n,r,i,t,o,s=[]){const l=P(i,t),c=l.startsWith(`
`)&&t?t.repeat(o||0):"";if(e==="comment")return`<!--${l}${c}-->`;const f=`<${e}${N(n,r,e,s)}>`;return h.has(e)?f:`${f}${l}${c}</${e}>`}function m(e,n,r={}){const i=r.parents||[];if(typeof e=="string")return S(e,n,!0,i);if(Array.isArray(e))return e.map(a=>m(a,n,r)).join(r.indentStr?`
`:"");const{tag:t,rest:o,children:s,attrs:l}=B(e);if(!O.has(t))throw new Error(`Tag "${t}" is not allowed`);if(t==="comment"&&r.insideComment)throw new Error("Nested comments are not allowed");if(h.has(t)&&s.length>0)throw new Error(`Tag "${t}" is a void element and cannot have children`);const c={...r,insideComment:t==="comment"||r.insideComment,level:(r.level||0)+1},f=a=>r.indentStr&&a.includes(`
`)&&!a.includes("<")?a.split(`
`).map(d=>[c.level,d]):[[c.level,a]];let u,p;if(I(o)){W(o.$bind);const a=E(n,o.$bind,[]),{$bind:d,$children:b=[],...w}=o;if(!Array.isArray(a)){const y=a&&typeof a=="object"&&a!==null?a:{},A=[...i,n];return m({[t]:{...w,$children:b}},y,{...r,parents:A})}u=[];for(const y of a){const A=[...i,n];for(const D of b){const F=m(D,y,{...c,parents:A});u.push(...f(F))}}p=w}else{u=[];const a=Array.isArray(n);for(const d of s){if(a&&L(d)){for(const w of n){const y=m(d,w,{...c,parents:[...i,n]});u.push(...f(y))}continue}const b=m(d,n,{...c,parents:i});u.push(...f(b))}p=l}return G(t,p,n,u,r.indentStr,r.level,i)}function N(e,n,r,i=[]){const t=Object.entries(e).filter(([o])=>(k(o,r),!0)).map(([o,s])=>`${o}="${j(S(String(s),n,!1,i))}"`).join(" ");return t?" "+t:""}function _(e,n={}){const{data:r={},yaml:i,indent:t}=n,o=e.renderer.rules.fence;e.renderer.rules.fence=function(s,l,c,f,u){const p=s[l],a=p.info?p.info.trim():"";if(a==="treebark"||a.startsWith("treebark "))try{return M(p.content,r,i,t)+`
`}catch(d){const b=d instanceof Error?d.message:"Unknown error";return`<div class="treebark-error"><strong>Treebark Error:</strong> ${q(b)}</div>
`}return o?o(s,l,c,f,u):""}}function M(e,n,r,i){let t,o=null;if(!e.trim())throw new Error("Empty or invalid template");if(r)try{t=r.load(e)}catch(s){o=s instanceof Error?s:new Error("YAML parsing failed")}if(!t)try{t=JSON.parse(e)}catch(s){throw r&&o?new Error(`Failed to parse as YAML or JSON. YAML error: ${o.message}`):new Error(`Failed to parse as JSON: ${s instanceof Error?s.message:"Invalid format"}`)}if(!t)throw new Error("Empty or invalid template");if(t&&typeof t=="object"&&"template"in t){const s={...n,...t.data};return T({template:t.template,data:s},{indent:i})}return T({template:t,data:n},{indent:i})}function q(e){const n={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,r=>n[r])}return _}));
//# sourceMappingURL=markdown-it-treebark-browser.min.js.map
