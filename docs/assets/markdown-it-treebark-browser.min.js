(function(b,w){typeof exports=="object"&&typeof module<"u"?module.exports=w():typeof define=="function"&&define.amd?define(w):(b=typeof globalThis<"u"?globalThis:b||self,b.MarkdownItTreebark=w())})(this,(function(){"use strict";const b=new Set(["div","span","p","header","footer","main","section","article","h1","h2","h3","h4","h5","h6","strong","em","blockquote","code","pre","ul","ol","li","table","thead","tbody","tr","th","td","a"]),w=new Set(["comment","if"]),A=new Set(["img"]),P=new Set([...b,...w,...A]),T=new Set(["id","class","style","title","role","data-","aria-"]),B={a:new Set(["href","target","rel"]),img:new Set(["src","alt","width","height"]),table:new Set(["summary"]),th:new Set(["scope","colspan","rowspan"]),td:new Set(["scope","colspan","rowspan"]),blockquote:new Set(["cite"])};function E(r,t,n=[]){if(t===".")return r;if(t.startsWith(".")&&!t.startsWith("..")){const i=t.substring(1);return i?i.split(".").reduce((s,c)=>s&&typeof s=="object"&&s!==null?s[c]:void 0,r):r}let o=r,e=t;for(;e.startsWith("..");){let i=0,s=e;for(;s.startsWith("..");)i++,s=s.substring(2),s.startsWith("/")&&(s=s.substring(1));if(i<=n.length)o=n[n.length-i],e=s.startsWith(".")?s.substring(1):s;else return}return e?e.split(".").reduce((i,s)=>i&&typeof i=="object"&&i!==null?i[s]:void 0,o):o}function j(r){return r.replace(/[&<>"']/g,t=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})[t]||t)}function O(r,t,n=!0,o=[]){return r.replace(/\{\{\{([^{]*?)\}\}\}|\{\{([^{]*?)\}\}/g,(e,i,s)=>{if(i!==void 0)return`{{${i.trim()}}}`;const c=s.trim(),l=E(t,c,o);return l==null?"":n?j(String(l)):String(l)})}function G(r,t){const n=T.has(r)||[...T].some(i=>i.endsWith("-")&&r.startsWith(i)),o=B[t],e=o&&o.has(r);if(!n&&!e)throw new Error(`Attribute "${r}" is not allowed on tag "${t}"`)}function W(r){return r!==null&&typeof r=="object"&&!Array.isArray(r)&&"$bind"in r}function C(r){if(r!=="."){if(r.startsWith(".")&&!r.startsWith("..")){if(r.includes("{{"))throw new Error(`$bind does not support interpolation {{...}} - use literal property paths only. Invalid: $bind: "${r}"`);return}if(r.includes(".."))throw new Error(`$bind does not support parent context access (..) - use interpolation {{..prop}} in content/attributes instead. Invalid: $bind: "${r}"`);if(r.includes("{{"))throw new Error(`$bind does not support interpolation {{...}} - use literal property paths only. Invalid: $bind: "${r}"`)}}function _(r){if(Array.isArray(r)||typeof r!="object"||r===null)return!1;const t=Object.entries(r);if(t.length===0)return!1;const[,n]=t[0];return!n||typeof n!="object"||Array.isArray(n)?!1:"$bind"in n&&n.$bind==="."}function N(r){if(!r||typeof r!="object")throw new Error("Template object cannot be null, undefined, or non-object");const t=Object.entries(r);if(t.length===0)throw new Error("Template object must have at least one tag");const n=t[0];if(!n)throw new Error("Template object must have at least one tag");const[o,e]=n,i=typeof e=="string"?[e]:Array.isArray(e)?e:e?.$children||[],s=e&&typeof e=="object"&&!Array.isArray(e)?Object.fromEntries(Object.entries(e).filter(([c])=>c!=="$children")):{};return{tag:o,rest:e,children:i,attrs:s}}const q=(r,t)=>{if(!t)return r.length<=1?r[0]?.[1]??"":r.reduce((o,[,e])=>o+e,"");if(r.length===0)return"";if(r.length===1&&!r[0][1].includes("<"))return r[0][1];let n=`
`;for(let o=0;o<r.length;o++)n+=t.repeat(r[o][0])+r[o][1],o<r.length-1&&(n+=`
`);return n+=`
`,n};function I(r,t={}){const n=Array.isArray(r.data)?r.data:{...r.data,...t.data},o=t.indent?{indentStr:typeof t.indent=="number"?" ".repeat(t.indent):typeof t.indent=="string"?t.indent:"  ",level:0}:{};if(!Array.isArray(r.template)&&Array.isArray(r.data)&&!_(r.template)){const e=o.indentStr?`
`:"";return r.data.map(i=>f(r.template,{...i,...t.data},o)).join(e)}return f(r.template,n,o)}function M(r,t,n,o,e,i,s=[]){const c=q(o,e),l=c.startsWith(`
`)&&e?e.repeat(i||0):"";if(r==="comment")return`<!--${c}${l}-->`;const d=`<${r}${F(t,n,r,s)}>`;return A.has(r)?d:`${d}${c}${l}</${r}>`}function f(r,t,n={}){const o=n.parents||[];if(typeof r=="string")return O(r,t,!0,o);if(Array.isArray(r))return r.map(a=>f(a,t,n)).join(n.indentStr?`
`:"");const{tag:e,rest:i,children:s,attrs:c}=N(r);if(!P.has(e))throw new Error(`Tag "${e}" is not allowed`);if(e==="comment"&&n.insideComment)throw new Error("Nested comments are not allowed");if(e==="if"){if(!W(i))throw new Error('"if" tag requires $bind attribute to specify the condition');C(i.$bind);const a=E(t,i.$bind,o),{$bind:u,$children:m=[],$not:y,...g}=i;if(Object.keys(g).length>0)throw new Error('"if" tag does not support attributes, only $bind, $not, and $children');if(!(y?!a:!!a))return"";if(!n.indentStr)return m.map(v=>f(v,t,n)).join("");const S=n.level||0,Y=n.indentStr.repeat(S);return m.map((v,H)=>{const L=f(v,t,n);return H===0?L:Y+L}).join(`
`)}if(A.has(e)&&s.length>0)throw new Error(`Tag "${e}" is a void element and cannot have children`);const l={...n,insideComment:e==="comment"||n.insideComment,level:(n.level||0)+1},d=a=>a===""?[]:n.indentStr&&a.includes(`
`)&&!a.includes("<")?a.split(`
`).map(u=>[l.level,u]):[[l.level,a]];let h,p;if(W(i)){C(i.$bind);const a=E(t,i.$bind,[]),{$bind:u,$children:m=[],...y}=i;if(!Array.isArray(a)){const g=a&&typeof a=="object"&&a!==null?a:{},$=[...o,t];return f({[e]:{...y,$children:m}},g,{...n,parents:$})}h=[];for(const g of a){const $=[...o,t];for(const k of m){const S=f(k,g,{...l,parents:$});h.push(...d(S))}}p=y}else{h=[];for(const a of s){const u=f(a,t,{...l,parents:o});h.push(...d(u))}p=c}return M(e,p,t,h,n.indentStr,n.level,o)}function F(r,t,n,o=[]){const e=Object.entries(r).filter(([i])=>(G(i,n),!0)).map(([i,s])=>`${i}="${j(O(String(s),t,!1,o))}"`).join(" ");return e?" "+e:""}function D(r,t={}){const{data:n={},yaml:o,indent:e}=t,i=r.renderer.rules.fence;r.renderer.rules.fence=function(s,c,l,d,h){const p=s[c],a=p.info?p.info.trim():"";if(a==="treebark"||a.startsWith("treebark "))try{return J(p.content,n,o,e)+`
`}catch(u){const m=u instanceof Error?u.message:"Unknown error";return`<div class="treebark-error"><strong>Treebark Error:</strong> ${R(m)}</div>
`}return i?i(s,c,l,d,h):""}}function J(r,t,n,o){let e,i=null;if(!r.trim())throw new Error("Empty or invalid template");if(n)try{e=n.load(r)}catch(s){i=s instanceof Error?s:new Error("YAML parsing failed")}if(!e)try{e=JSON.parse(r)}catch(s){throw n&&i?new Error(`Failed to parse as YAML or JSON. YAML error: ${i.message}`):new Error(`Failed to parse as JSON: ${s instanceof Error?s.message:"Invalid format"}`)}if(!e)throw new Error("Empty or invalid template");if(e&&typeof e=="object"&&"template"in e){const s={...t,...e.data};return I({template:e.template,data:s},{indent:o})}return I({template:e,data:t},{indent:o})}function R(r){const t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return r.replace(/[&<>"']/g,n=>t[n])}return D}));
//# sourceMappingURL=markdown-it-treebark-browser.min.js.map
