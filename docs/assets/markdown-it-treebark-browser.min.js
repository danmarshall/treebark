(function(m,y){typeof exports=="object"&&typeof module<"u"?module.exports=y():typeof define=="function"&&define.amd?define(y):(m=typeof globalThis<"u"?globalThis:m||self,m.MarkdownItTreebark=y())})(this,(function(){"use strict";const m=new Set(["div","span","p","header","footer","main","section","article","h1","h2","h3","h4","h5","h6","strong","em","blockquote","code","pre","ul","ol","li","table","thead","tbody","tr","th","td","a"]),y=new Set(["$comment","$if"]),w=new Set(["img","br","hr"]),L=new Set([...m,...y,...w]),j=new Set(["id","class","style","title","role","data-","aria-"]),P={a:new Set(["href","target","rel"]),img:new Set(["src","alt","width","height"]),table:new Set(["summary"]),th:new Set(["scope","colspan","rowspan"]),td:new Set(["scope","colspan","rowspan"]),blockquote:new Set(["cite"])},T=new Set(["$<","$>","$<=","$>=","$=","$in"]),O=new Set(["$check","$then","$else","$not","$join",...T]);function p(e,r,o=[]){if(r===".")return e;let i=e,n=r;for(;n.startsWith("..");){let s=0,t=n;for(;t.startsWith("..");)s++,t=t.substring(2),t.startsWith("/")&&(t=t.substring(1));if(s<=o.length)i=o[o.length-s],n=t.startsWith(".")?t.substring(1):t;else return}return n?n.split(".").reduce((s,t)=>s&&typeof s=="object"&&s!==null?s[t]:void 0,i):i}function g(e){return e.replace(/[&<>"']/g,r=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})[r]||r)}function A(e,r,o=!0,i=[]){return e.replace(/\{\{\{([^{]*?)\}\}\}|\{\{([^{]*?)\}\}/g,(n,s,t)=>{if(s!==void 0)return`{{${s.trim()}}}`;const l=t.trim(),c=p(r,l,i);return c==null?"":o?g(String(c)):String(c)})}function R(e,r){const o=j.has(e)||[...j].some(s=>s.endsWith("-")&&e.startsWith(s)),i=P[r],n=i&&i.has(e);if(!o&&!n)throw new Error(`Attribute "${e}" is not allowed on tag "${r}"`)}function W(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)&&"$bind"in e}function E(e,r){if(e!=="."){if(e.includes(".."))throw new Error(`${r} does not support parent context access (..) - use interpolation {{..prop}} in content/attributes instead. Invalid: ${r}: "${e}"`);if(e.includes("{{"))throw new Error(`${r} does not support interpolation {{...}} - use literal property paths only. Invalid: ${r}: "${e}"`)}}function C(e,r){const o=[];for(const t of T)t in r&&o.push({key:t,value:r[t]});if(o.length===0){const t=!!e;return r.$not?!t:t}const i=o.map(t=>{switch(t.key){case"$<":return typeof e=="number"&&typeof t.value=="number"&&e<t.value;case"$>":return typeof e=="number"&&typeof t.value=="number"&&e>t.value;case"$<=":return typeof e=="number"&&typeof t.value=="number"&&e<=t.value;case"$>=":return typeof e=="number"&&typeof t.value=="number"&&e>=t.value;case"$=":return e===t.value;case"$in":return Array.isArray(t.value)&&t.value.includes(e);default:return!1}}),n=r.$join==="OR";let s;return n?s=i.some(t=>t):s=i.every(t=>t),r.$not?!s:s}function N(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)&&"$check"in e&&typeof e.$check=="string"}function G(e,r,o=[]){E(e.$check,"$check");const i=p(r,e.$check,o);return C(i,e)?e.$then!==void 0?e.$then:"":e.$else!==void 0?e.$else:""}function _(e){if(Array.isArray(e)||typeof e!="object"||e===null)return!1;const r=Object.entries(e);if(r.length===0)return!1;const[,o]=r[0];return!o||typeof o!="object"||Array.isArray(o)?!1:"$bind"in o&&o.$bind==="."}function q(e){if(!e||typeof e!="object")throw new Error("Template object cannot be null, undefined, or non-object");const r=Object.entries(e);if(r.length===0)throw new Error("Template object must have at least one tag");const o=r[0];if(!o)throw new Error("Template object must have at least one tag");const[i,n]=o,s=typeof n=="string"?[n]:Array.isArray(n)?n:n?.$children||[],t=n&&typeof n=="object"&&!Array.isArray(n)?Object.fromEntries(Object.entries(n).filter(([l])=>l!=="$children")):{};return{tag:i,rest:n,children:s,attrs:t}}function B(e,r,o=[]){const i=e;if(!i.$check)throw new Error('"$if" tag requires $check attribute to specify the condition');E(i.$check,"$check");const n=p(r,i.$check,o);if(typeof e=="object"&&e!==null&&!Array.isArray(e)&&"$children"in e)throw new Error('"$if" tag does not support $children, use $then and $else instead');const{$then:s,$else:t}=i;if(s!==void 0&&Array.isArray(s))throw new Error('"$if" tag $then must be a string or single element object, not an array');if(t!==void 0&&Array.isArray(t))throw new Error('"$if" tag $else must be a string or single element object, not an array');const c=(typeof e=="object"&&e!==null&&!Array.isArray(e)?Object.keys(e):[]).filter(u=>!O.has(u));if(c.length>0)throw new Error(`"$if" tag does not support attributes: ${c.join(", ")}. Allowed: ${[...O].join(", ")}`);return{valueToRender:C(n,i)?s:t}}const M=(e,r)=>{if(!r)return e.length<=1?e[0]?.[1]??"":e.reduce((i,[,n])=>i+n,"");if(e.length===0)return"";if(e.length===1&&!e[0][1].includes("<"))return e[0][1];let o=`
`;for(let i=0;i<e.length;i++)o+=r.repeat(e[i][0])+e[i][1],i<e.length-1&&(o+=`
`);return o+=`
`,o};function k(e,r={}){const o=Array.isArray(e.data)?e.data:{...e.data,...r.data},i=r.indent?{indentStr:typeof r.indent=="number"?" ".repeat(r.indent):typeof r.indent=="string"?r.indent:"  ",level:0}:{};if(!Array.isArray(e.template)&&Array.isArray(e.data)&&!_(e.template)){const n=i.indentStr?`
`:"";return e.data.map(s=>h(e.template,{...s,...r.data},i)).join(n)}return h(e.template,o,i)}function D(e,r,o,i,n,s,t=[]){const l=M(i,n),c=l.startsWith(`
`)&&n?n.repeat(s||0):"";if(e==="$comment")return`<!--${l}${c}-->`;const f=`<${e}${F(r,o,e,t)}>`;return w.has(e)?f:`${f}${l}${c}</${e}>`}function h(e,r,o={}){const i=o.parents||[];if(typeof e=="string")return A(e,r,!0,i);if(Array.isArray(e))return e.map(a=>h(a,r,o)).join(o.indentStr?`
`:"");const{tag:n,rest:s,children:t,attrs:l}=q(e);if(!L.has(n))throw new Error(`Tag "${n}" is not allowed`);if(n==="$comment"&&o.insideComment)throw new Error("Nested comments are not allowed");if(n==="$if"){const{valueToRender:a}=B(s,r,i);return a===void 0?"":h(a,r,o)}if(w.has(n)&&t.length>0)throw new Error(`Tag "${n}" is a void element and cannot have children`);const c={...o,insideComment:n==="$comment"||o.insideComment,level:(o.level||0)+1},f=a=>a===""?[]:o.indentStr&&a.includes(`
`)&&!a.includes("<")?a.split(`
`).map($=>[c.level,$]):[[c.level,a]];let d,u;if(W(s)){E(s.$bind,"$bind");const a=p(r,s.$bind,[]),{$bind:$,$children:b=[],...I}=s;if(!Array.isArray(a)){const S=a&&typeof a=="object"&&a!==null?a:{},v=[...i,r];return h({[n]:{...I,$children:b}},S,{...o,parents:v})}d=[];for(const S of a){const v=[...i,r];for(const H of b){const U=h(H,S,{...c,parents:v});d.push(...f(U))}}u=I}else{d=[];for(const a of t){const $=h(a,r,{...c,parents:i});d.push(...f($))}u=l}return D(n,u,r,d,o.indentStr,o.level,i)}function F(e,r,o,i=[]){const n=Object.entries(e).filter(([s])=>(R(s,o),!0)).map(([s,t])=>{if(N(t)){const l=G(t,r,i);return`${s}="${g(A(String(l),r,!1,i))}"`}else return`${s}="${g(A(String(t),r,!1,i))}"`}).join(" ");return n?" "+n:""}function Y(e,r={}){const{data:o={},yaml:i,indent:n}=r,s=e.renderer.rules.fence;e.renderer.rules.fence=function(t,l,c,f,d){const u=t[l],a=u.info?u.info.trim():"";if(a==="treebark"||a.startsWith("treebark "))try{return J(u.content,o,i,n)+`
`}catch($){const b=$ instanceof Error?$.message:"Unknown error";return`<div class="treebark-error"><strong>Treebark Error:</strong> ${K(b)}</div>
`}return s?s(t,l,c,f,d):""}}function J(e,r,o,i){let n,s=null;if(!e.trim())throw new Error("Empty or invalid template");if(o)try{n=o.load(e)}catch(t){s=t instanceof Error?t:new Error("YAML parsing failed")}if(!n)try{n=JSON.parse(e)}catch(t){throw o&&s?new Error(`Failed to parse as YAML or JSON. YAML error: ${s.message}`):new Error(`Failed to parse as JSON: ${t instanceof Error?t.message:"Invalid format"}`)}if(!n)throw new Error("Empty or invalid template");if(n&&typeof n=="object"&&"template"in n){const t={...r,...n.data};return k({template:n.template,data:t},{indent:i})}return k({template:n,data:r},{indent:i})}function K(e){const r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,o=>r[o])}return Y}));
//# sourceMappingURL=markdown-it-treebark-browser.min.js.map
