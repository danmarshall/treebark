{
    "hello-world": {
        "label": "Hello World",
        "markdown": "# Welcome to markdown-it-treebark!\n\nThis plugin allows you to embed **treebark templates** inside markdown code blocks.\n\n```treebark\n{\n  \"div\": {\n    \"class\": \"greeting\",\n    \"$children\": [\n      { \"h2\": \"Hello {{name}}!\" },\n      { \"p\": \"Welcome to the markdown-it-treebark plugin.\" }\n    ]\n  }\n}\n```\n\nRegular markdown continues to work normally:\n- Bullet points\n- **Bold text**\n- *Italic text*",
        "data": {
            "name": "World"
        }
    },
    "product-card": {
        "label": "Product Card",
        "markdown": "# Product Showcase\n\nHere's a product card rendered with treebark:\n\n```treebark\n{\n  \"div\": {\n    \"class\": \"product-card\",\n    \"$children\": [\n      { \"h2\": \"{{name}}\" },\n      { \"img\": { \"src\": \"{{image}}\", \"alt\": \"{{name}}\" } },\n      { \"p\": \"{{description}}\" },\n      { \"div\": { \"class\": \"price\", \"$children\": [\"{{price}}\"] } },\n      { \"a\": { \"href\": \"{{link}}\", \"class\": \"btn\", \"$children\": [\"Learn More\"] } }\n    ]\n  }\n}\n```\n\n## Features\n\n- Dynamic content with data binding\n- Clean HTML output\n- Safe rendering",
        "data": {
            "name": "Gaming Laptop",
            "description": "High-performance laptop for gaming and development",
            "price": "$1,299",
            "image": "https://via.placeholder.com/300x200",
            "link": "#product"
        }
    },
    "list-binding": {
        "label": "List Binding",
        "markdown": "# Team Members\n\nMeet our amazing team:\n\n```treebark\n{\n  \"ul\": {\n    \"class\": \"team-list\",\n    \"$bind\": \"members\",\n    \"$children\": [\n      {\n        \"li\": {\n          \"class\": \"team-member\",\n          \"$children\": [\n            { \"strong\": \"{{name}}\" },\n            \" - \",\n            { \"em\": \"{{role}}\" }\n          ]\n        }\n      }\n    ]\n  }\n}\n```\n\n## About Us\n\nWe're passionate about building great software!",
        "data": {
            "members": [
                { "name": "Alice", "role": "Developer" },
                { "name": "Bob", "role": "Designer" },
                { "name": "Charlie", "role": "Manager" }
            ]
        }
    },
    "mixed-content": {
        "label": "Mixed Content",
        "markdown": "# {{siteName}} Documentation\n\nWelcome to the **{{siteName}}** documentation!\n\n## Quick Start\n\nGet started with our product in minutes:\n\n```treebark\n{\n  \"div\": {\n    \"class\": \"quick-start\",\n    \"$children\": [\n      { \"h3\": \"Installation\" },\n      { \"pre\": \"npm install {{packageName}}\" },\n      { \"h3\": \"Usage\" },\n      { \"p\": \"Import and use in your project:\" }\n    ]\n  }\n}\n```\n\n## Features\n\nCheck out our latest features:\n\n```treebark\n{\n  \"ul\": {\n    \"class\": \"features\",\n    \"$bind\": \"features\",\n    \"$children\": [\n      {\n        \"li\": {\n          \"$children\": [\n            { \"strong\": \"{{title}}\" },\n            \" - \",\n            \"{{description}}\"\n          ]\n        }\n      }\n    ]\n  }\n}\n```\n\n## Get Help\n\nVisit our [documentation](#) or [contact support](#).",
        "data": {
            "siteName": "Treebark",
            "packageName": "treebark",
            "features": [
                { "title": "Safe", "description": "XSS protection built-in" },
                { "title": "Fast", "description": "Optimized rendering" },
                { "title": "Simple", "description": "Easy to learn and use" }
            ]
        }
    },
    "full-template": {
        "label": "Full Template with Data",
        "markdown": "# Product Gallery\n\nBrowse our amazing products below:\n\n```treebark\n{\n  \"template\": {\n    \"div\": {\n      \"class\": \"product-grid\",\n      \"$children\": [\n        { \"h2\": \"Featured Products\" },\n        {\n          \"div\": {\n            \"class\": \"products\",\n            \"$bind\": \"products\",\n            \"$children\": [\n              {\n                \"div\": {\n                  \"class\": \"product-card\",\n                  \"$children\": [\n                    { \"img\": { \"src\": \"{{image}}\", \"alt\": \"{{name}}\" } },\n                    { \"h3\": \"{{name}}\" },\n                    { \"p\": \"{{description}}\" },\n                    { \"div\": { \"class\": \"price\", \"$children\": [\"{{price}}\"] } }\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  },\n  \"data\": {\n    \"products\": [\n      {\n        \"name\": \"Treebark Core\",\n        \"description\": \"Safe template rendering for Markdown\",\n        \"price\": \"Free\",\n        \"image\": \"https://via.placeholder.com/150\"\n      },\n      {\n        \"name\": \"Treebark Pro\",\n        \"description\": \"Advanced features and support\",\n        \"price\": \"$29/month\",\n        \"image\": \"https://via.placeholder.com/150\"\n      }\n    ]\n  }\n}\n```\n\n*Note: This example includes both template and data in the code block.*",
        "data": {}
    },
    "conditional-rendering": {
        "label": "Conditional Rendering ($if Tag)",
        "markdown": "# User Dashboard with Conditional Content\n\nThe **$if** tag allows conditional rendering based on data values.\n\n## Basic Example\n\n```treebark\n{\n  \"div\": {\n    \"class\": \"user-status\",\n    \"$children\": [\n      { \"h3\": \"Account Status\" },\n      {\n        \"$if\": {\n          \"$check\": \"isPremium\",\n          \"$children\": [\n            { \"p\": { \"style\": \"color: gold;\", \"$children\": [\"⭐ Premium Member\"] } }\n          ]\n        }\n      },\n      {\n        \"$if\": {\n          \"$check\": \"isPremium\",\n          \"$not\": true,\n          \"$children\": [\n            { \"p\": \"Standard Member - Upgrade to Premium!\" }\n          ]\n        }\n      }\n    ]\n  }\n}\n```\n\n## Key Features\n\n- Use `$check` to specify the condition\n- Use `$not: true` to invert the condition (like 'unless')\n- Works with nested properties like `user.isAdmin`\n- The $if tag is transparent - it doesn't render itself",
        "data": {
            "isPremium": true
        }
    },
    "if-else-branches": {
        "label": "If/Else Branches ($then/$else)",
        "markdown": "# User Authentication Status\n\nThe **$then** and **$else** keys provide clean if/else branching.\n\n## If/Else Example\n\n```treebark\n{\n  \"div\": {\n    \"class\": \"auth-status\",\n    \"$children\": [\n      { \"h3\": \"Welcome!\" },\n      {\n        \"$if\": {\n          \"$check\": \"isLoggedIn\",\n          \"$then\": {\n            \"div\": {\n              \"class\": \"logged-in\",\n              \"$children\": [\n                { \"p\": \"Hello, {{username}}!\" },\n                { \"a\": { \"href\": \"#logout\", \"$children\": [\"Logout\"] } }\n              ]\n            }\n          },\n          \"$else\": {\n            \"div\": {\n              \"class\": \"logged-out\",\n              \"$children\": [\n                { \"p\": \"Please log in to continue.\" },\n                { \"a\": { \"href\": \"#login\", \"class\": \"btn\", \"$children\": [\"Login\"] } }\n              ]\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n```\n\n## Key Features\n\n- `$then` contains the element to render when condition is true\n- `$else` contains the element to render when condition is false\n- Each branch outputs exactly one element (1:1 mapping)\n- Both branches are optional",
        "data": {
            "isLoggedIn": true,
            "username": "Alice"
        }
    },
    "conditional-operators": {
        "label": "Comparison Operators",
        "markdown": "# Age-Based Access Control\n\nUse comparison operators to create powerful conditional logic.\n\n## Comparison Examples\n\n```treebark\n{\n  \"div\": {\n    \"class\": \"access-control\",\n    \"$children\": [\n      { \"h3\": \"Access Level for Age: {{age}}\" },\n      {\n        \"$if\": {\n          \"$check\": \"age\",\n          \"$<\": 13,\n          \"$then\": { \"p\": { \"style\": \"color: red;\", \"$children\": [\"❌ Child account - Restricted access\"] } }\n        }\n      },\n      {\n        \"$if\": {\n          \"$check\": \"age\",\n          \"$>=\": 13,\n          \"$<\": 18,\n          \"$then\": { \"p\": { \"style\": \"color: orange;\", \"$children\": [\"⚠️ Teen account - Limited access\"] } }\n        }\n      },\n      {\n        \"$if\": {\n          \"$check\": \"age\",\n          \"$>=\": 18,\n          \"$then\": { \"p\": { \"style\": \"color: green;\", \"$children\": [\"✓ Full access granted\"] } }\n        }\n      },\n      { \"hr\": {} },\n      { \"h4\": \"Role-Based Access\" },\n      {\n        \"$if\": {\n          \"$check\": \"role\",\n          \"$in\": [\"admin\", \"moderator\", \"editor\"],\n          \"$then\": { \"p\": { \"style\": \"color: blue;\", \"$children\": [\"⭐ Special privileges granted\"] } },\n          \"$else\": { \"p\": \"Standard user privileges\" }\n        }\n      }\n    ]\n  }\n}\n```\n\n## Available Operators\n\n- `$<` - Less than\n- `$>` - Greater than\n- `$<=` - Less than or equal\n- `$>=` - Greater than or equal\n- `$=` - Strict equality\n- `$in` - Array membership",
        "data": {
            "age": 25,
            "role": "admin"
        }
    },
    "conditional-join": {
        "label": "Operator Stacking ($join)",
        "markdown": "# Pricing Logic with Multiple Conditions\n\nCombine multiple operators with **AND** (default) or **OR** logic using `$join`.\n\n## AND Logic (Default)\n\n```treebark\n{\n  \"div\": {\n    \"class\": \"pricing\",\n    \"$children\": [\n      { \"h3\": \"Standard Pricing\" },\n      { \"p\": \"Age: {{age}}, Member: {{isMember}}\" },\n      {\n        \"$if\": {\n          \"$check\": \"age\",\n          \"$>=\": 18,\n          \"$<=\": 65,\n          \"$then\": { \"p\": { \"style\": \"color: green;\", \"$children\": [\"✓ Standard adult rate: $50\"] } },\n          \"$else\": { \"p\": \"Discounted rate available\" }\n        }\n      },\n      { \"hr\": {} },\n      { \"h3\": \"Discounted Pricing (OR Logic)\" },\n      {\n        \"$if\": {\n          \"$check\": \"age\",\n          \"$<\": 18,\n          \"$>\": 65,\n          \"$join\": \"OR\",\n          \"$then\": { \"p\": { \"style\": \"color: blue;\", \"$children\": [\"🎉 Special discount: $30\"] } },\n          \"$else\": { \"p\": \"Standard rate: $50\" }\n        }\n      },\n      { \"hr\": {} },\n      { \"h3\": \"Negation Example\" },\n      {\n        \"$if\": {\n          \"$check\": \"age\",\n          \"$>=\": 18,\n          \"$<=\": 65,\n          \"$not\": true,\n          \"$then\": { \"p\": { \"style\": \"color: orange;\", \"$children\": [\"Outside working age range\"] } },\n          \"$else\": { \"p\": \"Working age range (18-65)\" }\n        }\n      }\n    ]\n  }\n}\n```\n\n## Key Features\n\n- Multiple operators use **AND** logic by default\n- Use `$join: 'OR'` to change to OR logic\n- Use `$not: true` to invert the entire result\n- Operators can be stacked for complex conditions",
        "data": {
            "age": 70,
            "isMember": false
        }
    },
    "conditional-attributes": {
        "label": "Conditional Attribute Values",
        "markdown": "# Dynamic Styling with Conditional Attributes\n\nApply conditional values to **any attribute** using the same conditional syntax.\n\n## Conditional Attributes Example\n\n```treebark\n{\n  \"div\": {\n    \"class\": \"status-dashboard\",\n    \"$children\": [\n      { \"h3\": \"Server Status Dashboard\" },\n      {\n        \"div\": {\n          \"class\": {\n            \"$check\": \"status\",\n            \"$=\": \"online\",\n            \"$then\": \"status-online\",\n            \"$else\": \"status-offline\"\n          },\n          \"$children\": [\n            { \"strong\": \"Server Status: \" },\n            { \"span\": \"{{status}}\" }\n          ]\n        }\n      },\n      { \"hr\": {} },\n      { \"h4\": \"Performance Score: {{score}}\" },\n      {\n        \"div\": {\n          \"class\": {\n            \"$check\": \"score\",\n            \"$>=\": 90,\n            \"$then\": \"score-excellent\",\n            \"$else\": \"score-average\"\n          },\n          \"style\": {\n            \"$check\": \"score\",\n            \"$>=\": 90,\n            \"$then\": \"color: green; font-weight: bold;\",\n            \"$else\": \"color: orange;\"\n          },\n          \"$children\": [\n            {\n              \"$if\": {\n                \"$check\": \"score\",\n                \"$>=\": 90,\n                \"$then\": { \"span\": \"⭐ Excellent Performance\" },\n                \"$else\": { \"span\": \"Average Performance\" }\n              }\n            }\n          ]\n        }\n      },\n      { \"hr\": {} },\n      { \"h4\": \"User Role Badge\" },\n      {\n        \"span\": {\n          \"class\": {\n            \"$check\": \"role\",\n            \"$in\": [\"admin\", \"moderator\"],\n            \"$then\": \"badge-special\",\n            \"$else\": \"badge-normal\"\n          },\n          \"$children\": [\"Role: {{role}}\"]\n        }\n      }\n    ]\n  }\n}\n```\n\n## Key Features\n\n- Conditional values work on **any attribute** (class, style, href, etc.)\n- Uses the same operators as $if tag ($<, $>, $=, $in, etc.)\n- Supports $not, $join modifiers\n- Clean, declarative syntax",
        "data": {
            "status": "online",
            "score": 95,
            "role": "admin"
        }
    }
}
